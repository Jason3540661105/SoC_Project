//initial head file
#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"

#include<stdio.h>
#include<stdlib.h>
#include <stdbool.h>
#include <string.h>


//定義地圖長寬大小
#define Map1_HEIGHT 9
#define Map1_WIDTH	8

//定義地圖的陣列資訊
int init_map[Map1_HEIGHT][Map1_WIDTH] = {
	{0, 0, 1, 1, 1, 1, 1, 0},
	{1, 1, 1, 0, 0, 0, 1, 0},
	{1, 3, 5, 4, 0, 0, 1, 0},
	{1, 1, 1, 0, 4, 3, 1, 0},
	{1, 3, 1, 1, 4, 0, 1, 0},
	{1, 0, 1, 0, 3, 0, 1, 1},
	{1, 4, 0, 0, 4, 4, 3, 1},
	{1, 0, 0, 0, 3, 0, 0, 1},
	{1, 1, 1, 1, 1, 1, 1, 1}
};
/*
int init_map[Map1_HEIGHT][Map1_WIDTH] = {
	{0, 0, 1, 1, 1, 1, 1, 0},
	{1, 1, 1, 0, 0, 0, 1, 0},
	{1, 0, 5, 4, 0, 0, 1, 0},
	{1, 1, 1, 0, 4, 0, 1, 0},
	{1, 0, 1, 1, 4, 0, 1, 0},
	{1, 0, 1, 0, 0, 0, 1, 1},
	{1, 4, 0, 0, 4, 4, 0, 1},
	{1, 0, 0, 0, 0, 0, 0, 1},
	{1, 1, 1, 1, 1, 1, 1, 1}
};

 */
/*	0:Empty Position	|	1:Game Wall		|	3:Where the box should be placed
 * 	4:Box Position		|	5:Human Position-1
*/

//讀取最初始的地圖資料
void Initial_Map(int Map_data[Map1_HEIGHT][Map1_WIDTH], int init_map[Map1_HEIGHT][Map1_WIDTH]);

//將遊戲的Map資料從二維陣列轉換為一維陣列
void MapToArray_c(u8 *byteArray, int Map_data[Map1_HEIGHT][Map1_WIDTH], int Game_State);

//計算目的地剩餘數量
//int Remaining_Destinations(u8 *Map_data); //1
//int Remaining_Destinations(int Map_data[Map1_HEIGHT][Map1_WIDTH]);//2
void Remaining_Destinations_v(int *Remaining_Destinations_Total, int Map_data[Map1_HEIGHT][Map1_WIDTH]);

//判斷遊戲是否勝利-1(轉換過的map) 2(未轉換過的map)
//bool isWinner(u8 *Map_data);							//1
bool isWinner(int Map_data[Map1_HEIGHT][Map1_WIDTH]);	//2

//提供給UART傳輸的遊戲狀態判斷|| 1.[0]:遊戲尚未完成  2.[1]:遊戲完成
void Judge_Game_State(int *Sokoban_Game_State, int Map_data[Map1_HEIGHT][Map1_WIDTH]);

//在「二維陣列」的Map中尋找人物座標
void Find_Person_Coordinates(int *X, int *Y, int Map_data[Map1_HEIGHT][Map1_WIDTH]);

//
void Move_Right(int *Map_Updata[Map1_HEIGHT][Map1_WIDTH], int Person_X, int Person_Y, int Map_data[Map1_HEIGHT][Map1_WIDTH])

//檢查地圖資料
void Print_Map_Data(u8 *Map_data);
